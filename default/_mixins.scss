@mixin placeholder() {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin element-transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin element-transform($transform) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -o-transform: $transform;
  -ms-transform: $transform;
  transform: $transform;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin text-shadow($arguments) {
  -webkit-text-shadow: $arguments;
  -moz-text-shadow: $arguments;
  text-shadow: $arguments;
}

@mixin colorLink($color) {
  color: $color;
  &:hover {
    color: $color;
    text-decoration: none;
  }
}

@mixin colorHover($color, $percent) {
  background: $color;
  &:hover {
    background: darken($color, $percent);
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin linearGradient($top, $bottom) {
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $top 0%, $bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $top 0%, $bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom, $top 0%, $bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#000000', GradientType=0); /* IE6-9 */
}

// buttons
@mixin btn-style() {
  background: transparent;
  border: 1px solid $color-tertiary-2-base;
  @include border-radius(2px);
  color: $color-theme-1 !important;
  box-sizing: border-box;
  @include element-transition(all 0.3s ease);
  font-size: $font-size-base;
  text-transform: uppercase;
  padding: 13px 20px 7px;
  line-height: normal;
  width: auto;
  min-height: 43px;
  display: inline-block;
  text-shadow: none;
  box-shadow: none;
  &:hover,
  &:focus {
    background-color: $color-theme-1;
    border-color: $color-theme-1;
    color: $color-tertiary-1 !important;
  }
  @include breakpoint('s-') {
    width: 100%;
    margin: 10px auto;
    text-align: center;
  }
}

@mixin btn-style-transparent() {
  @include btn-style();
  border: 1px solid $color-tertiary-1;
  color: $color-tertiary-1 !important;
}

// inputs, textareas

@mixin text-field() {
  background: $color-tertiary-1;
  border: 0;
  line-height: 2.5;
  height: auto;
  padding: 0 15px;
  font-size: 16px;
  @include border-radius(0px);
}

@mixin input-style() {
  @include border-radius(0);
  line-height: normal;
  padding: 5px 10px;
  font-size: 16px;
  border: 1px solid $color-tertiary-2-base;
  min-height: 43px;
}

@mixin li-elem() {
  position: static;
  display: block;
  padding: 0;
  box-shadow: none;
  margin: 0;
  > li {
    padding: 10px 20px;
    margin: 0;
    list-style: none;
    a {
      padding: 0;
      color: $color-tertiary-1;
      background: transparent;
      &:hover,
      &:focus,
      &:visited {
        background: transparent;
      }
    }
    &:last-child {
      border: none;
    }
  }
}

@mixin white-line() {
  &:after {
    display: block;
    content: '';
    border-bottom: 1px solid $color-tertiary-1;
    width: 35px;
    position: absolute;
    bottom: -5px;
  }
}

@mixin green-line() {
  position: relative;
  &:after {
    display: block;
    content: '';
    border-bottom: 2px solid $color-theme-1;
    width: 35px;
    position: absolute;
    top: -5px;
  }
}

@mixin alert-mixin($type) {
  @if ($type == info) {
    $color: $color-primary-1-base;
    background: transparent !important;
    color: $color-theme-4;
    border-color: $color;
    a,
    strong,
    h1, h2, h3, h4, h5, h6 {
      color: $color !important;
    }
    a:hover,
    a:focus {
      text-decoration: underline;
      &.btn {
        text-decoration: none;
        border-color: $color !important;
        background-color: $color !important;
        color: $color-tertiary-1 !important;
      }
    }
  }
  @if ($type == error) {
    $color: #F00;
    background: transparent !important;
    color: $color-theme-4;
    border-color: $color;
    a,
    strong,
    h1, h2, h3, h4, h5, h6 {
      color: $color !important;
    }
    a:hover,
    a:focus {
      text-decoration: underline;
      &.btn {
        text-decoration: none;
        border-color: $color !important;
        background-color: $color !important;
        color: $color-tertiary-1 !important;
      }
    }
  }
  @if ($type == warning) {
    $color: #03A9F4;
    background: transparent !important;
    color: $color-theme-4;
    border-color: $color;
    a,
    strong,
    h1, h2, h3, h4, h5, h6 {
      color: $color !important;
    }
    a:hover,
    a:focus {
      text-decoration: underline;
      &.btn {
        text-decoration: none;
        border-color: $color !important;
        background-color: $color !important;
        color: $color-tertiary-1 !important;
      }
    }
  }
}

// images
// TODO: Still used?
@mixin full-size-image() {
  img {
    max-width: 100%;
    width: auto;
    height: auto;
  }
}

// blocks

// Bootstrap container width
@mixin bootstrap-container() {
  margin-right: auto;
  margin-left: auto;
  padding: 20px 15px 40px;
  @include breakpoint("m+") {
    width: $screen-m-container;
  }
  @include breakpoint("l+") {
    width: $screen-l-container;
  }
  @include breakpoint("xl") {
    width: $screen-xl-container;
  }
}

@mixin share-block($color, $hover-color) {
  a {
    margin-right: 7px;
    color: $color;
    .fa-stack {
      border: 3px solid $color;
      border-radius: 7px;
      width: 35px;
      height: 35px;
      line-height: 1.7em;
      .fa {
        color: $color;
      }
    }
    &:hover {
      .fa-stack {
        border-color: $hover-color;
        .fa {
          color: $hover-color;
        }
      }
    }
  }
}

@mixin share-block-transparent($color, $hover-color) {
  @include share-block($color, $hover-color);
  a {
    .fa-stack {
      background: transparent;
    }
  }
}

@mixin main-search-block() {
  float: right;
  z-index: 10;
  height: $navbar-height;
  form {
    width: $navbar-height;
    position: relative;
    * {
      box-sizing: border-box;
      @include element-transition(all 0.3s ease);
    }
    .views-widget-filter-search_api_views_fulltext {
      position: absolute;
      overflow: hidden;
      right: $navbar-height;
      top: 0;
      z-index: 1;
      padding: 0;
      width: 0;
      .form-control {
        height: 100px;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-family: $font-family-main-bold;
        font-size: 20px;
        padding: 20px;
        border-radius: 0 !important;
        @include box-shadow(none);
      }
      .input-group-addon {
        background: transparent;
        border-radius: 0 !important;
        border: none;
      }
    }
    .views-submit-button {
      position: relative;
      background: transparent;
      z-index: 10;
      padding: 0;
      width: 100%;
      height: $navbar-height;
      .form-submit {
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        border-radius: 0;
        background: transparent;
        border: none;
        font-size: 0;
        outline: none !important;
        &:after {
          $search-icon-size: 30px;
          display: block;
          position: absolute;
          content: "\f002";
          font-family: $font-family-icon;
          font-size: $search-icon-size;
          color: $color-tertiary-1;
          text-align: center;
          top: ($navbar-height - $search-icon-size) / 2;
          right: ($navbar-height - $search-icon-size) / 2;
        }
      }
    }
  }
  &.open-search-block {
    .views-widget-filter-search_api_views_fulltext {
      width: 510px;
      border-left: 1px solid $color-tertiary-2-dark;
      .form-control,
      .form-autocomplete .input-group-addon {
        background: $color-tertiary-1 !important;
        border-radius: 0 !important;
        border: none;
        .glyphicon {
          color: $color-theme-3;
          display: none;
          &.glyphicon-spin {
            display: block;
          }
        }
      }
    }
    .views-submit-button {
      background: $color-tertiary-1;
      .form-submit:after {
        color: $color-theme-3 !important;
      }
    }
  }
}

// todo: what is it?
@mixin carousel-block() {
  li {
    border: none;
    @include border-radius(0);
  }
  .jcarousel-control-prev,
  .jcarousel-control-next {
    margin-top: -40px;
    width: 40px;
    height: 80px;
    padding-top: 23px;
    font-size: 30px;
    @include border-radius(2px);
    @include box-shadow(none);
    background: rgba(0, 0, 0, 0.4);
    &:hover {
      background: rgba(0, 0, 0, 0.6);
      color: $color-tertiary-1;
    }
  }
  .jcarousel-control-prev {
    left: 0;
  }
  .jcarousel-control-next {
    right: 0;
  }
  .jcarousel-pagination {
    a {
      @include box-shadow(none);
      color: $color-tertiary-1;
      border: 1px solid $color-tertiary-1;
      background: transparent;
      position: relative;
      width: 14px;
      height: 14px;
      &.active:after {
        display: block;
        content: '';
        border-radius: 50%;
        position: absolute;
        top: 0;
        left: 0;
        width: 8px;
        height: 8px;
        margin: 2px;
        background: #FFF;
      }
    }
  }
}

@mixin parallax-block() {
  background-attachment: fixed;
  background-position: center center;
  background-size: cover;
  text-align: center;
  padding-left: 15px;
  padding-right: 15px;
}

@mixin list-block() {
  overflow: hidden;
  text-align: center;
  margin: 100px auto;
  .block-title {
    @include title-style($color-tertiary-2-base, 40px);
  }
  @include breakpoint('m-') {
    margin: 50px auto;
  }
}

@mixin accordion() {
  .accordion {
    @include element-transition(all 0.3s ease);
    border-bottom: 1px solid $color-tertiary-2-base;
    h2 {
      border-radius: 0;
      line-height: normal;
      padding: 20px 20px 15px;
      margin: 0;
      text-align: left;
      text-transform: uppercase;
      color: $color-theme-1;
      cursor: pointer;
      letter-spacing: 1px;
      font-family: $font-family-main-bold;
      font-size: $font-size-base;
      position: relative;
      &:hover {
        cursor: pointer;
        color: $color-tertiary-1;
        background-color: $color-theme-1;
      }
      &:after {
        font-family: $font-family-icon;
        position: absolute;
        content: "\f107";
        display: block;
        right: 10px;
        top: 15px;
        font-size: 26px;
      }
    }
    .accordion-content {
      @include element-transition(all 0.3s ease);
      height: 0;
      padding: 0;
      overflow: hidden;
      background: $color-tertiary-1;
      color: $color-tertiary-2-dark;
      text-align: left;
      line-height: 1.5;
      ul, ol {
        margin: 0;
      }
    }

    // open accordion

    &.expanded {
      h2 {
        cursor: pointer;
        color: $color-tertiary-1;
        background-color: $color-theme-1;
        &:after {
          top: 13px;
          content: "\f106";
        }
      }
      .accordion-content.open {
        height: auto;
        padding: 40px;
      }
    }

    &:last-child {
      border-bottom: none;
    }
  }
}

@mixin bootstrap-row() {
  margin-right: -15px;
  margin-left: -15px;
}

@mixin bootstrap-col() {
  position: relative;
  min-height: 1px;
  padding-right: 15px;
  padding-left: 15px;
  margin: 0;
  float: left;
}

@mixin bootstrap-col-xs($size) {
  $percent: 100% * $size / 12;
  width: $percent;
}

@mixin bootstrap-col-sm($size) {
  $percent: 100% * $size / 12;
  $breakpoint: "m+";
  @include breakpoint($breakpoint) {
    width: $percent;
  }
}

@mixin bootstrap-col-md($size) {
  $percent: 100% * $size / 12;
  $breakpoint: "l+";
  @include breakpoint($breakpoint) {
    width: $percent;
  }
}

@mixin bootstrap-col-lg($size) {
  $percent: 100% * $size / 12;
  $breakpoint: "xl";
  @include breakpoint($breakpoint) {
    width: $percent;
  }
}

@mixin continuous-column() {
  padding-bottom: 9999px;
  margin-bottom: -9999px;
}

@mixin underline($color, $width) {
  &:after {
    display: block;
    content: '';
    border-bottom: $width solid $color;
    width: 125px;
    position: relative;
    top: -5px;
  }
}

@mixin btn-style() {
  background: transparent;
  border: 1px solid $color-theme-1;
  @include border-radius(2px);
  color: $color-tertiary-1 !important;
  box-sizing: border-box;
  @include element-transition(all 0.3s ease);
  font-size: $font-size-base;
  background-color: $color-theme-1;
  text-transform: uppercase;
  padding: 10px 20px 10px;
  line-height: normal;
  white-space: normal;
  width: auto;
  min-height: 43px;
  height: auto;
  display: inline-block;
  text-shadow: none;
  box-shadow: none;
  &:hover,
  &:focus {
    box-shadow: inset 0 0 100px rgba(255, 255, 255, 0.3);
    text-decoration: none;
    /*background-color: $color-tertiary-1;
    border-color: $color-tertiary-2-base;
    color: $color-theme-1 !important;*/
  }
  @include breakpoint('s-') {
    width: 100%;
    margin: 10px auto;
    text-align: center;
  }
}

@mixin title-style($color, $size, $weight: 600) {
  font-size: $size;
  font-weight: $weight;
  font-family: $font-family-main;
  color: $color;
  margin: 20px 0 30px;
  text-transform: uppercase;
  line-height: $size+2;
}

@mixin gray-title($font-size) {
  padding: 0 15px;
  display: inline;
  background-color: rgba(0, 0, 0, 0.6);
  font-size: $font-size;
  text-transform: uppercase;
  font-weight: bold;
  @include breakpoint('m-') {
    font-size: 42px;
  }
}

@mixin include-icon($icon-name, $order: 'before') {
  // font awesome variables ../../font-awesome-4.3.0/_variables.scss
  @if ($order == 'before') {
    &:before {
      content: $icon-name;
      display: inline-block;
      font-family: FontAwesome; // shortening font declaration
      font-size: inherit; // can't have font-size inherit on line above, so need to override
      text-rendering: auto; // optimizelegibility throws things off #1094
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      transform: translate(0, 0); // ensures no half-pixel rendering in firefox
    }
  } @else if ($order ==  'after') {
    &:after {
      content: $icon-name;
      display: inline-block;
      font: FontAwesome; // shortening font declaration
      font-size: inherit; // can't have font-size inherit on line above, so need to override
      text-rendering: auto; // optimizelegibility throws things off #1094
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      transform: translate(0, 0); // ensures no half-pixel rendering in firefox
    }
  }
}

@mixin wide-line($color, $order: 'before') {
  $width: 4px;
  overflow: visible;
  @if ($order == 'before') {
    &:before {
      content: '';
      display: block;
      position: relative;
      top: 0;
      height: $width;
      width: 60%;
      background-color: $color;
      margin: 0 auto;
      transform: translate(0, 0); // ensures no half-pixel rendering in firefox
      visibility: visible;
    }
  } @else if ($order ==  'after') {
    &:after {
      content: '';
      display: block;
      position: relative;
      bottom: -($width);
      height: $width;
      width: 60%;
      background-color: $color;
      margin: 0 auto;
      transform: translate(0, 0); // ensures no half-pixel rendering in firefox
      visibility: visible;
    }
  }
}

@mixin submit-button($height) {
  text-transform: uppercase;
  border-radius: 0;
  height: $height;
  font-size: 22px;
  line-height: $height;
  text-align: center;
  padding: 0;
  margin: 0;
  border-left: none;
}

@mixin parallax-background() {
  background-attachment: fixed;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
}

// Add custom paddings.
@mixin bootstrap-container($padding: 15px) {
  margin-right: auto;
  margin-left: auto;
  padding: 20px $padding 40px;
  @include breakpoint("m+") {
    width: $screen-m-container - 2 * ($padding - 15px);
  }
  @include breakpoint("l+") {
    width: $screen-l-container - 2 * ($padding - 15px);
  }
  @include breakpoint("xl") {
    width: $screen-xl-container - 2 * ($padding - 15px);
  }
}
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;
  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  } @else if ($direction == inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  } @else if ($direction == inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}


@mixin grid ($container, $columns) {
  .#{$container} {
    @include bootstrap-container();
  }
  .#{$columns} {
    @include bootstrap-col();
  }
}